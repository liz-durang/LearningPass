{
  "address": "0x8EFD93e9DDF7f9D82e161B6Db0e2Da82F6BD1F0c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "questionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isCorrect",
          "type": "bool"
        }
      ],
      "name": "QuestionAnswered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "questionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "questionText",
          "type": "string"
        }
      ],
      "name": "QuestionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "questionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "selectedOptionIndex",
          "type": "uint256"
        }
      ],
      "name": "UserAnswered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_questionText",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_options",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "_correctOptionIndex",
          "type": "uint256"
        }
      ],
      "name": "addQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_questionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_optionIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "answerQuestion",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractTag",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_questionId",
          "type": "uint256"
        }
      ],
      "name": "getQuestionDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "questionText",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "options",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "correctOptionIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_questionIds",
          "type": "uint256[]"
        }
      ],
      "name": "getQuestionsDetails",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "questionTexts",
          "type": "string[]"
        },
        {
          "internalType": "string[][]",
          "name": "allOptions",
          "type": "string[][]"
        },
        {
          "internalType": "uint256[]",
          "name": "correctOptionIndices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_questionIds",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserAnswers",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "questionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "questions",
      "outputs": [
        {
          "internalType": "string",
          "name": "questionText",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "correctOptionIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_questionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_selectedOption",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "saveUserAnswer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userAnswers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5dff0071dfd570b8861d5966247a5addcbf05a6616c825f492e198870ad7f181",
  "receipt": {
    "to": null,
    "from": "0xAAeCA2a5703a6ea642Dd7bCF73E1E9c39d26f12C",
    "contractAddress": "0x8EFD93e9DDF7f9D82e161B6Db0e2Da82F6BD1F0c",
    "transactionIndex": 5,
    "gasUsed": "1352987",
    "logsBloom": "0x
    "blockHash": "0x34620e4ce668868f4416a6eb170ff34c8e23f690bc13418d77edd64002015c0a",
    "transactionHash": "0x5dff0071dfd570b8861d5966247a5addcbf05a6616c825f492e198870ad7f181",
    "logs": [],
    "blockNumber": 94174716,
    "cumulativeGasUsed": "2058231",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xAAeCA2a5703a6ea642Dd7bCF73E1E9c39d26f12C"
  ],
  "numDeployments": 1,
  "solcInputHash": "19c22cc5110c784403a208c3d6347168",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isCorrect\",\"type\":\"bool\"}],\"name\":\"QuestionAnswered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"}],\"name\":\"QuestionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"selectedOptionIndex\",\"type\":\"uint256\"}],\"name\":\"UserAnswered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_questionText\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_options\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"_correctOptionIndex\",\"type\":\"uint256\"}],\"name\":\"addQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_optionIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"answerQuestion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractTag\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"}],\"name\":\"getQuestionDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"options\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"correctOptionIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_questionIds\",\"type\":\"uint256[]\"}],\"name\":\"getQuestionsDetails\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"questionTexts\",\"type\":\"string[]\"},{\"internalType\":\"string[][]\",\"name\":\"allOptions\",\"type\":\"string[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"correctOptionIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_questionIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserAnswers\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"questionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"questions\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"correctOptionIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_selectedOption\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"saveUserAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userAnswers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/QuestionManager.sol\":\"QuestionManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/QuestionManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\ncontract QuestionManager {\\n\\n    string public constant contractTag = \\\"Question Manager Contract!\\\";\\n    address public owner;\\n\\n    // Structure for the options of a question\\n    struct Option {\\n        string optionText;\\n    }\\n\\n    // Structure of a question with multiple options and one correct answer\\n    struct Question {\\n        string questionText;\\n        Option[] options;\\n        uint256 correctOptionIndex; // Index of the correct option in the options array\\n    }\\n\\n    // Mapping to store all questions\\n    mapping(uint256 => Question) public questions;\\n    uint256 public questionCount = 0;\\n\\n    // Mapping to store user answers\\n    mapping(address => mapping(uint256 => uint256)) public userAnswers; // user address -> question ID -> selected option index\\n\\n    // Events\\n    event QuestionCreated(uint256 questionId, string questionText);\\n    event QuestionAnswered(uint256 questionId, bool isCorrect);\\n    event UserAnswered(address user, uint256 questionId, uint256 selectedOptionIndex);\\n\\n    // Modifier: used to define a set of rules that must be met before or after a function is executed\\n    modifier isOwner() {\\n        require(msg.sender == owner, \\\"Not the Owner\\\");\\n        _;\\n    }\\n\\n    // Constructor: Called once on contract deployment\\n    constructor(address _owner) {\\n        owner = _owner;\\n    }\\n\\n    // Function to add a new question with its options\\n    function addQuestion(string memory _questionText, string[] memory _options, uint256 _correctOptionIndex) public {\\n        require(_correctOptionIndex < _options.length, \\\"Correct option index out of bounds\\\");\\n\\n        Question storage question = questions[questionCount];\\n        question.questionText = _questionText;\\n        question.correctOptionIndex = _correctOptionIndex;\\n\\n        for (uint256 i = 0; i < _options.length; i++) {\\n            question.options.push(Option({optionText: _options[i]}));\\n        }\\n\\n        emit QuestionCreated(questionCount, _questionText);\\n        questionCount++;\\n    }\\n\\n    // Function to answer a question and check if it's correct\\n    function answerQuestion(uint256 _questionId, uint256 _optionIndex, address _user) public returns (bool) {\\n        require(_questionId < questionCount, \\\"Invalid question ID\\\");\\n\\n        Question memory question = questions[_questionId];\\n        bool isCorrect = (_optionIndex == question.correctOptionIndex);\\n\\n        emit QuestionAnswered(_questionId, isCorrect);\\n        emit UserAnswered(_user, _questionId, _optionIndex); // Emitir evento de respuesta del usuario\\n\\n        return isCorrect;\\n    }\\n\\n    // Function to save user answer\\n    function saveUserAnswer(uint256 _questionId, uint256 _selectedOption, address _user) public {\\n        require(_questionId < questionCount, \\\"Invalid question ID\\\");\\n        userAnswers[_user][_questionId] = _selectedOption; // Guardar la respuesta del usuario\\n\\n        emit UserAnswered(_user, _questionId, _selectedOption); // Emitir evento\\n    }\\n\\n    // Function to get user answers for multiple questions\\n    function getUserAnswers(uint256[] memory _questionIds, address _user) public view returns (uint256[] memory) {\\n        uint256[] memory answers = new uint256[](_questionIds.length); // Inicializar el arreglo para las respuestas\\n\\n        for (uint256 i = 0; i < _questionIds.length; i++) {\\n            require(_questionIds[i] < questionCount, \\\"Invalid question ID\\\");\\n            answers[i] = userAnswers[_user][_questionIds[i]]; // Guardar la respuesta correspondiente\\n        }\\n\\n        return answers; // Retorna el arreglo de respuestas\\n    }\\n\\n    // Function to get the details of a question\\n    function getQuestionDetails(uint256 _questionId) public view returns (string memory questionText, string[] memory options, uint256 correctOptionIndex) {\\n        require(_questionId < questionCount, \\\"Invalid question ID\\\");\\n\\n        Question memory question = questions[_questionId];\\n        questionText = question.questionText;\\n        correctOptionIndex = question.correctOptionIndex;\\n\\n        options = new string[](question.options.length);\\n        for (uint256 i = 0; i < question.options.length; i++) {\\n            options[i] = question.options[i].optionText;\\n        }\\n\\n        return (questionText, options, correctOptionIndex);\\n    }\\n\\n    // Function to retrieve details for multiple questions based on an array of IDs\\n    function getQuestionsDetails(uint256[] memory _questionIds)\\n        public\\n        view\\n        returns (\\n            string[] memory questionTexts,\\n            string[][] memory allOptions,\\n            uint256[] memory correctOptionIndices,\\n            uint256[] memory ids\\n        )\\n    {\\n        uint256 length = _questionIds.length;\\n\\n        // Initialize arrays to store each detail component\\n        questionTexts = new string[](length);\\n        allOptions = new string[][](length);\\n        correctOptionIndices = new uint256[](length);\\n        ids = new uint256[](length); // Inicializar el arreglo ids\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            uint256 questionId = _questionIds[i];\\n            require(questionId < questionCount, \\\"Invalid question ID\\\");\\n\\n            Question memory question = questions[questionId];\\n\\n            // Store details for each question\\n            questionTexts[i] = question.questionText;\\n            correctOptionIndices[i] = question.correctOptionIndex;\\n            ids[i] = questionId; // Asignar el ID de la pregunta\\n\\n            // Initialize options array for each question\\n            string[] memory options = new string[](question.options.length);\\n            for (uint256 j = 0; j < question.options.length; j++) {\\n                options[j] = question.options[j].optionText;\\n            }\\n            allOptions[i] = options;\\n        }\\n\\n        return (questionTexts, allOptions, correctOptionIndices, ids);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x6141162e93f64878058605ced277e19a55fb6b3501388e5cc671b6cf6f8a7b0d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600060025534801561001557600080fd5b506040516116f13803806116f183398101604081905261003491610059565b600080546001600160a01b0319166001600160a01b0392909216919091179055610089565b60006020828403121561006b57600080fd5b81516001600160a01b038116811461008257600080fd5b9392505050565b611659806100986000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b146101435780638e67750c1461016e57806392563939146101815780639e6a8b5a146101ca5780639f8c45cf146101ed578063faf99c871461020f57600080fd5b80631468aa2c146100ae57806331b1b978146100ca5780633c60aca9146100eb5780633f40993c1461010e5780636cebbe8314610123575b600080fd5b6100b760025481565b6040519081526020015b60405180910390f35b6100dd6100d8366004610f2a565b61023a565b6040516100c1929190610f89565b6100fe6100f936600461107f565b6102de565b6040516100c19493929190611148565b61012161011c3660046111fe565b61075c565b005b610136610131366004611233565b6107e5565b6040516100c19190611280565b600054610156906001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b61012161017c366004611309565b6108f1565b6101bd6040518060400160405280601a81526020017f5175657374696f6e204d616e6167657220436f6e74726163742100000000000081525081565b6040516100c191906113e5565b6101dd6101d83660046111fe565b610a3a565b60405190151581526020016100c1565b6102006101fb366004610f2a565b610c96565b6040516100c1939291906113f8565b6100b761021d36600461142e565b600360209081526000928352604080842090915290825290205481565b60016020526000908152604090208054819061025590611458565b80601f016020809104026020016040519081016040528092919081815260200182805461028190611458565b80156102ce5780601f106102a3576101008083540402835291602001916102ce565b820191906000526020600020905b8154815290600101906020018083116102b157829003601f168201915b5050505050908060020154905082565b606080606080600085519050806001600160401b0381111561030257610302610fab565b60405190808252806020026020018201604052801561033557816020015b60608152602001906001900390816103205790505b509450806001600160401b0381111561035057610350610fab565b60405190808252806020026020018201604052801561038357816020015b606081526020019060019003908161036e5790505b509350806001600160401b0381111561039e5761039e610fab565b6040519080825280602002602001820160405280156103c7578160200160208202803683370190505b509250806001600160401b038111156103e2576103e2610fab565b60405190808252806020026020018201604052801561040b578160200160208202803683370190505b50915060005b8181101561075357600087828151811061042d5761042d611492565b6020026020010151905060025481106104615760405162461bcd60e51b8152600401610458906114a8565b60405180910390fd5b60008181526001602052604080822081516060810190925280548290829061048890611458565b80601f01602080910402602001604051908101604052809291908181526020018280546104b490611458565b80156105015780601f106104d657610100808354040283529160200191610501565b820191906000526020600020905b8154815290600101906020018083116104e457829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b828210156105ef5783829060005260206000200160405180602001604052908160008201805461055e90611458565b80601f016020809104026020016040519081016040528092919081815260200182805461058a90611458565b80156105d75780601f106105ac576101008083540402835291602001916105d7565b820191906000526020600020905b8154815290600101906020018083116105ba57829003601f168201915b5050505050815250508152602001906001019061052f565b5050505081526020016002820154815250509050806000015188848151811061061a5761061a611492565b6020026020010181905250806040015186848151811061063c5761063c611492565b6020026020010181815250508185848151811061065b5761065b611492565b60200260200101818152505060008160200151516001600160401b0381111561068657610686610fab565b6040519080825280602002602001820160405280156106b957816020015b60608152602001906001900390816106a45790505b50905060005b82602001515181101561071e57826020015181815181106106e2576106e2611492565b60200260200101516000015182828151811061070057610700611492565b60200260200101819052508080610716906114d5565b9150506106bf565b508088858151811061073257610732611492565b6020026020010181905250505050808061074b906114d5565b915050610411565b50509193509193565b600254831061077d5760405162461bcd60e51b8152600401610458906114a8565b6001600160a01b03811660008181526003602090815260408083208784528252918290208590558151928352820185905281018390527f64e0815df92a3524852c7e83b309593820d6955fcf0cda10b432b36efc96bd819060600160405180910390a1505050565b6060600083516001600160401b0381111561080257610802610fab565b60405190808252806020026020018201604052801561082b578160200160208202803683370190505b50905060005b84518110156108e95760025485828151811061084f5761084f611492565b6020026020010151106108745760405162461bcd60e51b8152600401610458906114a8565b6001600160a01b038416600090815260036020526040812086519091908790849081106108a3576108a3611492565b60200260200101518152602001908152602001600020548282815181106108cc576108cc611492565b6020908102919091010152806108e1816114d5565b915050610831565b509392505050565b8151811061094c5760405162461bcd60e51b815260206004820152602260248201527f436f7272656374206f7074696f6e20696e646578206f7574206f6620626f756e604482015261647360f01b6064820152608401610458565b600254600090815260016020526040902080610968858261154b565b506002810182905560005b83518110156109e35781600101604051806020016040528086848151811061099d5761099d611492565b60209081029190910181015190915282546001810184556000938452922081519192019081906109cd908261154b565b50505080806109db906114d5565b915050610973565b507fa5fbefdc56bf0d2d586a82a9f50784dfe29ae6d3cfe3e0491131259d4f2042ee60025485604051610a1792919061160a565b60405180910390a160028054906000610a2f836114d5565b919050555050505050565b60006002548410610a5d5760405162461bcd60e51b8152600401610458906114a8565b600084815260016020526040808220815160608101909252805482908290610a8490611458565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab090611458565b8015610afd5780601f10610ad257610100808354040283529160200191610afd565b820191906000526020600020905b815481529060010190602001808311610ae057829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610beb57838290600052602060002001604051806020016040529081600082018054610b5a90611458565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8690611458565b8015610bd35780601f10610ba857610100808354040283529160200191610bd3565b820191906000526020600020905b815481529060010190602001808311610bb657829003601f168201915b50505050508152505081526020019060010190610b2b565b5050509082525060029190910154602091820152604080830151815189815290881492810183905292935090917fb027d5b9823c9c8f39520f4b659b590e2597f7ef05da0d4e47d35437418acaa4910160405180910390a1604080516001600160a01b0386168152602081018890529081018690527f64e0815df92a3524852c7e83b309593820d6955fcf0cda10b432b36efc96bd819060600160405180910390a195945050505050565b60608060006002548410610cbc5760405162461bcd60e51b8152600401610458906114a8565b600084815260016020526040808220815160608101909252805482908290610ce390611458565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0f90611458565b8015610d5c5780601f10610d3157610100808354040283529160200191610d5c565b820191906000526020600020905b815481529060010190602001808311610d3f57829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610e4a57838290600052602060002001604051806020016040529081600082018054610db990611458565b80601f0160208091040260200160405190810160405280929190818152602001828054610de590611458565b8015610e325780601f10610e0757610100808354040283529160200191610e32565b820191906000526020600020905b815481529060010190602001808311610e1557829003601f168201915b50505050508152505081526020019060010190610d8a565b505050508152602001600282015481525050905080600001519350806040015191508060200151516001600160401b03811115610e8957610e89610fab565b604051908082528060200260200182016040528015610ebc57816020015b6060815260200190600190039081610ea75790505b50925060005b816020015151811015610f215781602001518181518110610ee557610ee5611492565b602002602001015160000151848281518110610f0357610f03611492565b60200260200101819052508080610f19906114d5565b915050610ec2565b50509193909250565b600060208284031215610f3c57600080fd5b5035919050565b6000815180845260005b81811015610f6957602081850181015186830182015201610f4d565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000610f9c6040830185610f43565b90508260208301529392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610fe957610fe9610fab565b604052919050565b60006001600160401b0382111561100a5761100a610fab565b5060051b60200190565b600082601f83011261102557600080fd5b8135602061103a61103583610ff1565b610fc1565b82815260059290921b8401810191818101908684111561105957600080fd5b8286015b84811015611074578035835291830191830161105d565b509695505050505050565b60006020828403121561109157600080fd5b81356001600160401b038111156110a757600080fd5b6110b384828501611014565b949350505050565b6000815180845260208085019450848260051b860182860160005b858110156111005783830389526110ee838351610f43565b988501989250908401906001016110d6565b5090979650505050505050565b600081518084526020808501945080840160005b8381101561113d57815187529582019590820190600101611121565b509495945050505050565b60808152600061115b60808301876110bb565b6020838203818501528187518084528284019150828160051b850101838a0160005b838110156111ab57601f198784030185526111998383516110bb565b9486019492509085019060010161117d565b505086810360408801526111bf818a61110d565b94505050505082810360608401526111d7818561110d565b979650505050505050565b80356001600160a01b03811681146111f957600080fd5b919050565b60008060006060848603121561121357600080fd5b833592506020840135915061122a604085016111e2565b90509250925092565b6000806040838503121561124657600080fd5b82356001600160401b0381111561125c57600080fd5b61126885828601611014565b925050611277602084016111e2565b90509250929050565b602081526000611293602083018461110d565b9392505050565b600082601f8301126112ab57600080fd5b81356001600160401b038111156112c4576112c4610fab565b6112d7601f8201601f1916602001610fc1565b8181528460208386010111156112ec57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561131e57600080fd5b83356001600160401b038082111561133557600080fd5b6113418783880161129a565b945060209150818601358181111561135857600080fd5b8601601f8101881361136957600080fd5b803561137761103582610ff1565b81815260059190911b8201840190848101908a83111561139657600080fd5b8584015b838110156113ce578035868111156113b25760008081fd5b6113c08d898389010161129a565b84525091860191860161139a565b50979a979950505050604095909501359450505050565b6020815260006112936020830184610f43565b60608152600061140b6060830186610f43565b828103602084015261141d81866110bb565b915050826040830152949350505050565b6000806040838503121561144157600080fd5b61144a836111e2565b946020939093013593505050565b600181811c9082168061146c57607f821691505b60208210810361148c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b602080825260139082015272125b9d985b1a59081c5d595cdd1a5bdb881251606a1b604082015260600190565b6000600182016114f557634e487b7160e01b600052601160045260246000fd5b5060010190565b601f82111561154657600081815260208120601f850160051c810160208610156115235750805b601f850160051c820191505b818110156115425782815560010161152f565b5050505b505050565b81516001600160401b0381111561156457611564610fab565b611578816115728454611458565b846114fc565b602080601f8311600181146115ad57600084156115955750858301515b600019600386901b1c1916600185901b178555611542565b600085815260208120601f198616915b828110156115dc578886015182559484019460019091019084016115bd565b50858210156115fa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006110b36040830184610f4356fea26469706673582212205894355d89be3847c5e463d698255c6d920984efb4f9e75c5f9d812c3e796bf364736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b146101435780638e67750c1461016e57806392563939146101815780639e6a8b5a146101ca5780639f8c45cf146101ed578063faf99c871461020f57600080fd5b80631468aa2c146100ae57806331b1b978146100ca5780633c60aca9146100eb5780633f40993c1461010e5780636cebbe8314610123575b600080fd5b6100b760025481565b6040519081526020015b60405180910390f35b6100dd6100d8366004610f2a565b61023a565b6040516100c1929190610f89565b6100fe6100f936600461107f565b6102de565b6040516100c19493929190611148565b61012161011c3660046111fe565b61075c565b005b610136610131366004611233565b6107e5565b6040516100c19190611280565b600054610156906001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b61012161017c366004611309565b6108f1565b6101bd6040518060400160405280601a81526020017f5175657374696f6e204d616e6167657220436f6e74726163742100000000000081525081565b6040516100c191906113e5565b6101dd6101d83660046111fe565b610a3a565b60405190151581526020016100c1565b6102006101fb366004610f2a565b610c96565b6040516100c1939291906113f8565b6100b761021d36600461142e565b600360209081526000928352604080842090915290825290205481565b60016020526000908152604090208054819061025590611458565b80601f016020809104026020016040519081016040528092919081815260200182805461028190611458565b80156102ce5780601f106102a3576101008083540402835291602001916102ce565b820191906000526020600020905b8154815290600101906020018083116102b157829003601f168201915b5050505050908060020154905082565b606080606080600085519050806001600160401b0381111561030257610302610fab565b60405190808252806020026020018201604052801561033557816020015b60608152602001906001900390816103205790505b509450806001600160401b0381111561035057610350610fab565b60405190808252806020026020018201604052801561038357816020015b606081526020019060019003908161036e5790505b509350806001600160401b0381111561039e5761039e610fab565b6040519080825280602002602001820160405280156103c7578160200160208202803683370190505b509250806001600160401b038111156103e2576103e2610fab565b60405190808252806020026020018201604052801561040b578160200160208202803683370190505b50915060005b8181101561075357600087828151811061042d5761042d611492565b6020026020010151905060025481106104615760405162461bcd60e51b8152600401610458906114a8565b60405180910390fd5b60008181526001602052604080822081516060810190925280548290829061048890611458565b80601f01602080910402602001604051908101604052809291908181526020018280546104b490611458565b80156105015780601f106104d657610100808354040283529160200191610501565b820191906000526020600020905b8154815290600101906020018083116104e457829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b828210156105ef5783829060005260206000200160405180602001604052908160008201805461055e90611458565b80601f016020809104026020016040519081016040528092919081815260200182805461058a90611458565b80156105d75780601f106105ac576101008083540402835291602001916105d7565b820191906000526020600020905b8154815290600101906020018083116105ba57829003601f168201915b5050505050815250508152602001906001019061052f565b5050505081526020016002820154815250509050806000015188848151811061061a5761061a611492565b6020026020010181905250806040015186848151811061063c5761063c611492565b6020026020010181815250508185848151811061065b5761065b611492565b60200260200101818152505060008160200151516001600160401b0381111561068657610686610fab565b6040519080825280602002602001820160405280156106b957816020015b60608152602001906001900390816106a45790505b50905060005b82602001515181101561071e57826020015181815181106106e2576106e2611492565b60200260200101516000015182828151811061070057610700611492565b60200260200101819052508080610716906114d5565b9150506106bf565b508088858151811061073257610732611492565b6020026020010181905250505050808061074b906114d5565b915050610411565b50509193509193565b600254831061077d5760405162461bcd60e51b8152600401610458906114a8565b6001600160a01b03811660008181526003602090815260408083208784528252918290208590558151928352820185905281018390527f64e0815df92a3524852c7e83b309593820d6955fcf0cda10b432b36efc96bd819060600160405180910390a1505050565b6060600083516001600160401b0381111561080257610802610fab565b60405190808252806020026020018201604052801561082b578160200160208202803683370190505b50905060005b84518110156108e95760025485828151811061084f5761084f611492565b6020026020010151106108745760405162461bcd60e51b8152600401610458906114a8565b6001600160a01b038416600090815260036020526040812086519091908790849081106108a3576108a3611492565b60200260200101518152602001908152602001600020548282815181106108cc576108cc611492565b6020908102919091010152806108e1816114d5565b915050610831565b509392505050565b8151811061094c5760405162461bcd60e51b815260206004820152602260248201527f436f7272656374206f7074696f6e20696e646578206f7574206f6620626f756e604482015261647360f01b6064820152608401610458565b600254600090815260016020526040902080610968858261154b565b506002810182905560005b83518110156109e35781600101604051806020016040528086848151811061099d5761099d611492565b60209081029190910181015190915282546001810184556000938452922081519192019081906109cd908261154b565b50505080806109db906114d5565b915050610973565b507fa5fbefdc56bf0d2d586a82a9f50784dfe29ae6d3cfe3e0491131259d4f2042ee60025485604051610a1792919061160a565b60405180910390a160028054906000610a2f836114d5565b919050555050505050565b60006002548410610a5d5760405162461bcd60e51b8152600401610458906114a8565b600084815260016020526040808220815160608101909252805482908290610a8490611458565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab090611458565b8015610afd5780601f10610ad257610100808354040283529160200191610afd565b820191906000526020600020905b815481529060010190602001808311610ae057829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610beb57838290600052602060002001604051806020016040529081600082018054610b5a90611458565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8690611458565b8015610bd35780601f10610ba857610100808354040283529160200191610bd3565b820191906000526020600020905b815481529060010190602001808311610bb657829003601f168201915b50505050508152505081526020019060010190610b2b565b5050509082525060029190910154602091820152604080830151815189815290881492810183905292935090917fb027d5b9823c9c8f39520f4b659b590e2597f7ef05da0d4e47d35437418acaa4910160405180910390a1604080516001600160a01b0386168152602081018890529081018690527f64e0815df92a3524852c7e83b309593820d6955fcf0cda10b432b36efc96bd819060600160405180910390a195945050505050565b60608060006002548410610cbc5760405162461bcd60e51b8152600401610458906114a8565b600084815260016020526040808220815160608101909252805482908290610ce390611458565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0f90611458565b8015610d5c5780601f10610d3157610100808354040283529160200191610d5c565b820191906000526020600020905b815481529060010190602001808311610d3f57829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610e4a57838290600052602060002001604051806020016040529081600082018054610db990611458565b80601f0160208091040260200160405190810160405280929190818152602001828054610de590611458565b8015610e325780601f10610e0757610100808354040283529160200191610e32565b820191906000526020600020905b815481529060010190602001808311610e1557829003601f168201915b50505050508152505081526020019060010190610d8a565b505050508152602001600282015481525050905080600001519350806040015191508060200151516001600160401b03811115610e8957610e89610fab565b604051908082528060200260200182016040528015610ebc57816020015b6060815260200190600190039081610ea75790505b50925060005b816020015151811015610f215781602001518181518110610ee557610ee5611492565b602002602001015160000151848281518110610f0357610f03611492565b60200260200101819052508080610f19906114d5565b915050610ec2565b50509193909250565b600060208284031215610f3c57600080fd5b5035919050565b6000815180845260005b81811015610f6957602081850181015186830182015201610f4d565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000610f9c6040830185610f43565b90508260208301529392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610fe957610fe9610fab565b604052919050565b60006001600160401b0382111561100a5761100a610fab565b5060051b60200190565b600082601f83011261102557600080fd5b8135602061103a61103583610ff1565b610fc1565b82815260059290921b8401810191818101908684111561105957600080fd5b8286015b84811015611074578035835291830191830161105d565b509695505050505050565b60006020828403121561109157600080fd5b81356001600160401b038111156110a757600080fd5b6110b384828501611014565b949350505050565b6000815180845260208085019450848260051b860182860160005b858110156111005783830389526110ee838351610f43565b988501989250908401906001016110d6565b5090979650505050505050565b600081518084526020808501945080840160005b8381101561113d57815187529582019590820190600101611121565b509495945050505050565b60808152600061115b60808301876110bb565b6020838203818501528187518084528284019150828160051b850101838a0160005b838110156111ab57601f198784030185526111998383516110bb565b9486019492509085019060010161117d565b505086810360408801526111bf818a61110d565b94505050505082810360608401526111d7818561110d565b979650505050505050565b80356001600160a01b03811681146111f957600080fd5b919050565b60008060006060848603121561121357600080fd5b833592506020840135915061122a604085016111e2565b90509250925092565b6000806040838503121561124657600080fd5b82356001600160401b0381111561125c57600080fd5b61126885828601611014565b925050611277602084016111e2565b90509250929050565b602081526000611293602083018461110d565b9392505050565b600082601f8301126112ab57600080fd5b81356001600160401b038111156112c4576112c4610fab565b6112d7601f8201601f1916602001610fc1565b8181528460208386010111156112ec57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561131e57600080fd5b83356001600160401b038082111561133557600080fd5b6113418783880161129a565b945060209150818601358181111561135857600080fd5b8601601f8101881361136957600080fd5b803561137761103582610ff1565b81815260059190911b8201840190848101908a83111561139657600080fd5b8584015b838110156113ce578035868111156113b25760008081fd5b6113c08d898389010161129a565b84525091860191860161139a565b50979a979950505050604095909501359450505050565b6020815260006112936020830184610f43565b60608152600061140b6060830186610f43565b828103602084015261141d81866110bb565b915050826040830152949350505050565b6000806040838503121561144157600080fd5b61144a836111e2565b946020939093013593505050565b600181811c9082168061146c57607f821691505b60208210810361148c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b602080825260139082015272125b9d985b1a59081c5d595cdd1a5bdb881251606a1b604082015260600190565b6000600182016114f557634e487b7160e01b600052601160045260246000fd5b5060010190565b601f82111561154657600081815260208120601f850160051c810160208610156115235750805b601f850160051c820191505b818110156115425782815560010161152f565b5050505b505050565b81516001600160401b0381111561156457611564610fab565b611578816115728454611458565b846114fc565b602080601f8311600181146115ad57600084156115955750858301515b600019600386901b1c1916600185901b178555611542565b600085815260208120601f198616915b828110156115dc578886015182559484019460019091019084016115bd565b50858210156115fa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006110b36040830184610f4356fea26469706673582212205894355d89be3847c5e463d698255c6d920984efb4f9e75c5f9d812c3e796bf364736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1815,
        "contract": "contracts/QuestionManager.sol:QuestionManager",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1832,
        "contract": "contracts/QuestionManager.sol:QuestionManager",
        "label": "questions",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Question)1827_storage)"
      },
      {
        "astId": 1835,
        "contract": "contracts/QuestionManager.sol:QuestionManager",
        "label": "questionCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1841,
        "contract": "contracts/QuestionManager.sol:QuestionManager",
        "label": "userAnswers",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Option)1818_storage)dyn_storage": {
        "base": "t_struct(Option)1818_storage",
        "encoding": "dynamic_array",
        "label": "struct QuestionManager.Option[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Question)1827_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct QuestionManager.Question)",
        "numberOfBytes": "32",
        "value": "t_struct(Question)1827_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Option)1818_storage": {
        "encoding": "inplace",
        "label": "struct QuestionManager.Option",
        "members": [
          {
            "astId": 1817,
            "contract": "contracts/QuestionManager.sol:QuestionManager",
            "label": "optionText",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Question)1827_storage": {
        "encoding": "inplace",
        "label": "struct QuestionManager.Question",
        "members": [
          {
            "astId": 1820,
            "contract": "contracts/QuestionManager.sol:QuestionManager",
            "label": "questionText",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1824,
            "contract": "contracts/QuestionManager.sol:QuestionManager",
            "label": "options",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(Option)1818_storage)dyn_storage"
          },
          {
            "astId": 1826,
            "contract": "contracts/QuestionManager.sol:QuestionManager",
            "label": "correctOptionIndex",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}